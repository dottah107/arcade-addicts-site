/* member-wire.js — v2 show gamertags */
(async () => {
  try {
    const { data:{ session } } = await supabase.auth.getSession();
    if (!session) { location.href = "/login/"; return; }

    const emailInput   = document.getElementById("aaFriendEmail");
    const sendBtn      = document.getElementById("aaSendReq");
    const incUL        = document.getElementById("aaIncoming");
    const outUL        = document.getElementById("aaOutgoing");

    const upTitleInput = document.getElementById("aaUploadTitle");
    const upFileInput  = document.getElementById("aaUploadFile");
    const upBtn        = document.getElementById("aaUploadBtn");
    const upList       = document.getElementById("aaUploadsList");

    function whoName(name, email, id){ return name || email || id; }

    async function renderIncoming(){
      if (!incUL) return;
      try {
        const rows = await AA.listIncomingRequests();
        incUL.innerHTML = rows.length ? rows.map(fr => {
          const who = whoName(fr.requester_name, fr.requester_email, fr.requester);
          return `<li>
            From: <strong>${who}</strong> · ${new Date(fr.created_at).toLocaleString()}
            <button data-acc="${fr.id}">Accept</button>
            <button data-dec="${fr.id}">Decline</button>
          </li>`;
        }).join("") : `<li>No requests</li>`;
        incUL.querySelectorAll("[data-acc]").forEach(b => b.onclick = async () => { await AA.acceptRequest(b.dataset.acc); renderIncoming(); });
        incUL.querySelectorAll("[data-dec]").forEach(b => b.onclick = async () => { await AA.declineRequest(b.dataset.dec); renderIncoming(); });
      } catch (e) { console.error("renderIncoming", e); }
    }

    async function renderOutgoing(){
      if (!outUL) return;
      try {
        const rows = await AA.listOutgoingRequests();
        outUL.innerHTML = rows.length ? rows.map(fr => {
          const who = whoName(fr.recipient_name, fr.recipient_email, fr.recipient);
          return `<li>To: <strong>${who}</strong> · ${fr.status}</li>`;
        }).join("") : `<li>None</li>`;
      } catch (e) { console.error("renderOutgoing", e); }
    }

    async function renderUploads(){
      if (!upList) return;
      try {
        const rows = await AA.listMyUploads?.() || [];
        upList.innerHTML = rows.length
          ? rows.map(r => `<li><a href="${r.url}" target="_blank">${r.title || r.path.split('/').pop()}</a> · ${new Date(r.created_at).toLocaleString()}</li>`).join("")
          : "<li>No uploads yet.</li>";
      } catch (e) { console.error("renderUploads", e); }
    }

    sendBtn?.addEventListener("click", async () => {
      const email = emailInput?.value?.trim();
      if (!email) return alert("Enter a friend's email");
      try { await AA.sendFriendRequestByEmail(email); alert("Request sent"); renderOutgoing(); }
      catch (e) { alert(e.message || "Could not send"); }
    });

    upBtn?.addEventListener("click", async () => {
      const f = upFileInput?.files?.[0];
      if (!f) return alert("Choose a file");
      try {
        await AA.uploadContent(f, upTitleInput?.value || "");
        upTitleInput.value = ""; upFileInput.value = "";
        renderUploads();
      } catch (e) { alert(e.message || "Upload failed"); }
    });

    await renderIncoming();
    await renderOutgoing();
    await renderUploads();
  } catch (e) { console.error("member-wire init", e); }
})();

/* === gamertag load/save === */
(async () => {
  try {
    const { data:{ session } } = await supabase.auth.getSession();
    if (!session) return;
    const id = session.user.id;
    const input = document.getElementById("aaGamertag");
    const btn   = document.getElementById("aaSaveGamertag");
    const msg   = document.getElementById("aaGTStatus");

    // load current gamertag
    try {
      const { data } = await supabase.from("profiles").select("display_name").eq("id", id).single();
      if (data?.display_name && input) input.value = data.display_name;
    } catch(e){}

    async function saveGamertag(){
      if (!input) return;
      const name = (input.value||"").trim();
      if (!name) { if(msg) msg.textContent = "Enter a name"; return; }
      const { error } = await supabase.from("profiles").update({ display_name: name }).eq("id", id);
      if (error) { if(msg) msg.textContent = error.message; return; }
      if(msg) { msg.textContent = "Saved!"; setTimeout(()=> msg.textContent="", 1500); }
    }

    btn?.addEventListener("click", saveGamertag);
  } catch(e){}
})();

